---
interface Props {
  videoSrc: string;
  type: "mp4" | "webm" | "mov";
  poster?: string;
}

const { videoSrc, type, poster } = Astro.props;
---

<div class="video-container relative flex items-center justify-center">
  <video
    class="lazy-video"
    data-src={videoSrc}
    preload="none"
    autoplay
    playsinline
    muted
    loop
    poster={poster}
  >
    <source data-src={videoSrc} type={`video/${type}`} />
    Your browser does not support the video tag.
  </video>
  <div class="text-white poster_img absolute grid place-items-center inset-0">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke-width="1"
      stroke="currentColor"
      class="size-12"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        d="m2.25 15.75 5.159-5.159a2.25 2.25 0 0 1 3.182 0l5.159 5.159m-1.5-1.5 1.409-1.409a2.25 2.25 0 0 1 3.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 0 0 1.5-1.5V6a1.5 1.5 0 0 0-1.5-1.5H3.75A1.5 1.5 0 0 0 2.25 6v12a1.5 1.5 0 0 0 1.5 1.5Zm10.5-11.25h.008v.008h-.008V8.25Zm.375 0a.375.375 0 1 1-.75 0 .375.375 0 0 1 .75 0Z"
      ></path>
    </svg>
  </div>

  <style>
    .video-container {
      width: 636px;
      height: 356px;
    }

    @media (width < 1080px) {
      .video-container {
        width: 100%;
        height: 100%;
      }
    }

    .lazy-video {
      --width: 100%;
      --height: 100%;

      filter: blur(10px);
      transition: filter 0.5s ease-in-out;
      width: var(--width);
      height: var(--height);
    }
    .lazy-video.loaded {
      filter: blur(0);
    }

    .lazy-video + .poster_img {
      visibility: visible;
      opacity: 1;
      backdrop-filter: blur(8px);
      background: radial-gradient(
        hsla(0, 0%, 80%, 0.5),
        hsla(0, 0%, 21%, 0.503)
      );

      transition: all 3s ease-in-out;
    }

    .lazy-video.loaded + .poster_img {
      visibility: hidden;
      opacity: 0;
      /* backdrop-filter: blur(0px); */
    }
  </style>

  <script is:inline>
    document.addEventListener("astro:page-load", () => {
      const videos = document.querySelectorAll(".lazy-video");

      const observer = new IntersectionObserver((entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const video = entry.target;
            const source = video.querySelector("source");

            video.src = video.dataset.src;
            source.src = source.dataset.src;

            video.load();
            video.classList.add("loaded");

            observer.unobserve(video);
          }
        });
      });

      videos.forEach((video) => observer.observe(video));
    });
  </script>
</div>
