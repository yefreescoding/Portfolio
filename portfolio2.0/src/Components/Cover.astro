---
import Buttons from './Buttons.astro';
const { coverTitle, description, buttonsYes = true } = Astro.props;
---

<section id="home" class="cover" aria-label="Portada de la pagina">
  <!--** LEFT SIDE, Desktop. BOTTOM SIDE, mobile **-->
  <div class="cover__text">
    <h1 class="cover__h1 font-extrabold">
      {coverTitle}
    </h1>
    <p class="cover__p">{description}</p>
    <div class="cover__div flex flex-col items-end lg:flex-row gap-4 my-[2rem]">
      {
        buttonsYes && (
          <>
            <Buttons
              width="fit"
              link="mailto:yefree13santos@outlook.com"
              size="lg"
              classes="cover__links text-center"
              isFilled
            >
              Contacta Conmigo ;)
            </Buttons>
            <Buttons
              width="fit"
              link="cv/YefreeCV2023.pdf"
              size="lg"
              classes="cover__links text-center"
              theme="clr-background-1"
              isFilled
            >
              Curriculum PDF
            </Buttons>
          </>
        )
      }
    </div>
  </div>
  <div class="relative cover__image grid place-items-center relative">
    <slot />
    <div class="gridLine top-0"></div>
    <div class="gridLine-col left-[30%]"></div>
    <div class="gridLine top-50"></div>
    <div class="gridLine-col right-[30%]"></div>
    <div class="gridLine bottom-10"></div>
  </div>
</section>

<style>
  .cover,
  .cover__text,
  .cover__div {
    display: flex;
  }

  .cover__text,
  .cover__image {
    flex-basis: 25em;
    flex-grow: 2;
  }

  .cover {
    flex-wrap: wrap;
    overflow: hidden;
    width: min(100% - 2rem, 80em);
    margin-inline: auto;
  }
  .cover__image {
    width: min(100%, 30rem);
    aspect-ratio: 1;
    object-fit: contain;
  }
  .cover__text {
    flex-flow: column;
    justify-content: center;
    gap: 2rem;
    padding: 5vh 3vw;
  }
  .cover__h1 {
    color: var(--clr-text-2);
    font-size: clamp(2.3rem, calc(2.5rem + 4vw), 7rem);
  }

  .gridLine {
    --background: #ffffff;
    --color: var(--clr-text-1);
    --height: 1px;
    --width: 5px;
    --fade-stop: 90%;
    /* Bleed in or out from the container */
    --offset: -100px;

    position: absolute;
    width: calc(100% + var(--offset));
    height: var(--height);
    left: calc(var(--offset) / 2 * -1);

    background: linear-gradient(
      to right,
      var(--color),
      var(--color) 50%,
      transparent 0,
      transparent
    );
    background-size: var(--width) var(--height);

    /* Fade out the edges */
    mask-composite: exclude;
    -webkit-mask: linear-gradient(
        to left,
        var(--background) var(--fade-stop),
        transparent
      ),
      linear-gradient(to right, var(--background) var(--fade-stop), transparent),
      linear-gradient(black, black);
  }
  .gridLine-col {
    --background: #ffffff;
    --color: var(--clr-text-1);
    --height: 100%;
    --width: 1px;
    --fade-stop: 90%;
    /* Bleed in or out from the container */
    --offset: -100px;

    position: absolute;
    width: var(--width);
    height: var(--height);
    top: 0;
    /* left: 30%; */

    background: linear-gradient(
      180deg,
      var(--color),
      var(--color) 50%,
      transparent 0,
      transparent
    );
    background-size: 1px 5px;

    /* Fade out the edges */
    mask-composite: exclude;
    -webkit-mask: linear-gradient(
        to top,
        var(--background) var(--fade-stop),
        transparent
      ),
      linear-gradient(
        to bottom,
        var(--background) var(--fade-stop),
        transparent
      ),
      linear-gradient(black, black);
  }
</style>
